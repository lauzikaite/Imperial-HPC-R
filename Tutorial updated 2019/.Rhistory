gc()
.rs.restartR()
rm(list=ls(all=TRUE))
gc()
q()
knitr::opts_chunk$set(echo = FALSE,
eval = TRUE,
message = FALSE,
warning = FALSE,
fig.retina = TRUE,
fig.pos = "H",
tidy.opts=list(width.cutoff=60))
# tidy=TRUE
# tm <- knitr::knit_theme$get("anotherdark")
# knitr::knit_theme$set(tm)
library(kableExtra)
# fig.cap="\\label{fig:figs}Imperial HPC systems."
knitr::include_graphics(path = "HPC-systems.png")
df <- read.csv("hpc-systems.csv")
colnames(df) <- gsub("\\.", " ", colnames(df))
# cap <- paste("Imperial HPC systems.")
knitr::kable(x = df, align = rep('l', 6), format = "latex", longtable = T, booktabs = T) %>%
kable_styling(latex_options = c("repeat_header", "striped", "hover"), font_size = 8, position = "left") %>%
column_spec(c(1,2,3), width = "18em")
df <- read.csv("cx1-joblim.csv")
colnames(df) <- gsub("\\.", " ", colnames(df))
cap <- paste("Jobs allowed on CX1 system.")
knitr::kable(x = df, align = rep('l', 6), format = "latex", caption = cap, longtable = T, booktabs = T) %>%
kable_styling(latex_options = c("repeat_header", "striped", "hover"), font_size = 8, position = "left")
df <- read.csv("ax4-joblim.csv")
colnames(df) <- gsub("\\.", " ", colnames(df))
cap <- paste("Jobs allowed on AX4 system.")
knitr::kable(x = df, align = rep('l', 6), format = "latex", caption = cap, longtable = T, booktabs = T) %>%
kable_styling(latex_options = c("repeat_header", "striped", "hover"), font_size = 8, position = "left")
df <- read.csv("local_storage.csv", header = T)
colnames(df) <- gsub("\\.", " ", colnames(df))
cap <- paste("Storage available to every user.")
knitr::kable(x = df, align = rep('l', 6), format = "latex", caption = cap, longtable = F, booktabs = T) %>%
kable_styling(latex_options = c("repeat_header", "striped", "hover"), font_size = 8, position = "left") %>%
row_spec(c(3,6,9), hline_after = T)
df <- read.csv("remote_storage.csv", header = T)
colnames(df) <- gsub("\\.", " ", colnames(df))
cap <- paste("External storage options.")
knitr::kable(x = df, align = rep('l', 6), format = "latex", caption = cap, longtable = F, booktabs = T) %>%
kable_styling(latex_options = c("repeat_header", "striped", "hover"), font_size = 8, position = "left") %>%
row_spec(c(4,8), hline_after = T)
knitr::opts_chunk$set(echo = FALSE,
eval = TRUE,
message = FALSE,
warning = FALSE,
fig.retina = TRUE,
fig.pos = "H",
tidy.opts=list(width.cutoff=60))
# tidy=TRUE
# tm <- knitr::knit_theme$get("anotherdark")
# knitr::knit_theme$set(tm)
library(kableExtra)
# fig.cap="\\label{fig:figs}Imperial HPC systems."
knitr::include_graphics(path = "HPC-systems.png")
df <- read.csv("hpc-systems.csv")
colnames(df) <- gsub("\\.", " ", colnames(df))
# cap <- paste("Imperial HPC systems.")
knitr::kable(x = df, align = rep('l', 6), format = "latex", longtable = T, booktabs = T) %>%
kable_styling(latex_options = c("repeat_header", "striped", "hover"), font_size = 8, position = "left") %>%
column_spec(c(1,2,3), width = "18em")
df <- read.csv("cx1-joblim.csv")
colnames(df) <- gsub("\\.", " ", colnames(df))
cap <- paste("Jobs allowed on CX1 system.")
knitr::kable(x = df, align = rep('l', 6), format = "latex", caption = cap, longtable = T, booktabs = T) %>%
kable_styling(latex_options = c("repeat_header", "striped", "hover"), font_size = 8, position = "left")
df <- read.csv("ax4-joblim.csv")
colnames(df) <- gsub("\\.", " ", colnames(df))
cap <- paste("Jobs allowed on AX4 system.")
knitr::kable(x = df, align = rep('l', 6), format = "latex", caption = cap, longtable = T, booktabs = T) %>%
kable_styling(latex_options = c("repeat_header", "striped", "hover"), font_size = 8, position = "left")
df <- read.csv("local_storage.csv", header = T)
colnames(df) <- gsub("\\.", " ", colnames(df))
cap <- paste("Storage available to every user.")
knitr::kable(x = df, align = rep('l', 6), format = "latex", caption = cap, longtable = F, booktabs = T) %>%
kable_styling(latex_options = c("repeat_header", "striped", "hover"), font_size = 8, position = "left") %>%
row_spec(c(3,6,9), hline_after = T)
df <- read.csv("remote_storage.csv", header = T)
colnames(df) <- gsub("\\.", " ", colnames(df))
cap <- paste("External storage options.")
knitr::kable(x = df, align = rep('l', 6), format = "latex", caption = cap, longtable = F, booktabs = T) %>%
kable_styling(latex_options = c("repeat_header", "striped", "hover"), font_size = 8, position = "left") %>%
row_spec(c(4,8), hline_after = T)
library(rmarkdown)
library(kableExtra)
library(tinytex)
setwd("L:/Imperial-HPC-R-master/")
render("L:/Imperial-HPC-R-master/Guide_R-on-HPC.Rmd", output_format = "word_document", output_file = "L:/Imperial-HPC-R-master/Guide_R-on-HPC.pdf")
library(rmarkdown)
library(kableExtra)
library(tinytex)
setwd("L:/Imperial-HPC-R-master/")
render("L:/Imperial-HPC-R-master/Guide_R-on-HPC.Rmd", output_format = "pdf_document", output_file = "L:/Imperial-HPC-R-master/Guide_R-on-HPC.pdf")
library(rmarkdown)
library(kableExtra)
library(tinytex)
setwd("L:/Imperial-HPC-R-master/")
render("L:/Imperial-HPC-R-master/Guide_R-on-HPC.Rmd", output_format = "pdf_document", output_file = "L:/Imperial-HPC-R-master/Guide_R-on-HPC.pdf")
render("L:/Imperial-HPC-R-master/Guide_R-on-HPC.Rmd", output_format = "pdf_document", output_file = "L:/Imperial-HPC-R-master/Guide_R-on-HPC.pdf")
)
#tinytex::install_tinytex()
library(rmarkdown)
library(kableExtra)
library(tinytex)
setwd("L:/Imperial-HPC-R-master/")
render("L:/Imperial-HPC-R-master/Guide_R-on-HPC.Rmd", output_format = "word_document", output_file = "L:/Imperial-HPC-R-master/Guide_R-on-HPC.pdf")
#install.packages('tinytex')
#tinytex::install_tinytex()
library(rmarkdown)
library(kableExtra)
library(tinytex)
setwd("L:/Imperial-HPC-R-master/")
render("L:/Imperial-HPC-R-master/Guide_R-on-HPC.Rmd", output_format = "pdf_document", output_file = "L:/Imperial-HPC-R-master/Guide_R-on-HPC.pdf")
library(rmarkdown)
library(kableExtra)
library(tinytex)
setwd("L:/Imperial-HPC-R-master/")
render("L:/Imperial-HPC-R-master/Guide_R-on-HPC.Rmd", output_format = "pdf_document", output_file = "L:/Imperial-HPC-R-master/Guide_R-on-HPC.pdf")
library(rmarkdown)
library(kableExtra)
library(tinytex)
setwd("L:/Imperial-HPC-R-master/")
render("L:/Imperial-HPC-R-master/Guide_R-on-HPC.Rmd", output_format = "pdf_document", output_file = "L:/Imperial-HPC-R-master/Guide_R-on-HPC.pdf")
